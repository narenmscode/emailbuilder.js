{
  "version": 3,
  "sources": ["../../@usewaypoint/block-avatar/dist/index.mjs"],
  "sourcesContent": ["// src/index.tsx\nimport React from \"react\";\nimport { z } from \"zod\";\nvar PADDING_SCHEMA = z.object({\n  top: z.number(),\n  bottom: z.number(),\n  right: z.number(),\n  left: z.number()\n}).optional().nullable();\nvar getPadding = (padding) => padding ? `${padding.top}px ${padding.right}px ${padding.bottom}px ${padding.left}px` : void 0;\nvar AvatarPropsSchema = z.object({\n  style: z.object({\n    textAlign: z.enum([\"left\", \"center\", \"right\"]).optional().nullable(),\n    padding: PADDING_SCHEMA\n  }).optional().nullable(),\n  props: z.object({\n    size: z.number().gt(0).optional().nullable(),\n    shape: z.enum([\"circle\", \"square\", \"rounded\"]).optional().nullable(),\n    imageUrl: z.string().optional().nullable(),\n    alt: z.string().optional().nullable()\n  }).optional().nullable()\n});\nfunction getBorderRadius(shape, size) {\n  switch (shape) {\n    case \"rounded\":\n      return size * 0.125;\n    case \"circle\":\n      return size;\n    case \"square\":\n    default:\n      return void 0;\n  }\n}\nvar AvatarPropsDefaults = {\n  size: 64,\n  imageUrl: \"\",\n  alt: \"\",\n  shape: \"square\"\n};\nfunction Avatar({ style, props }) {\n  var _a, _b, _c, _d, _e;\n  const size = (_a = props == null ? void 0 : props.size) != null ? _a : AvatarPropsDefaults.size;\n  const imageUrl = (_b = props == null ? void 0 : props.imageUrl) != null ? _b : AvatarPropsDefaults.imageUrl;\n  const alt = (_c = props == null ? void 0 : props.alt) != null ? _c : AvatarPropsDefaults.alt;\n  const shape = (_d = props == null ? void 0 : props.shape) != null ? _d : AvatarPropsDefaults.shape;\n  const sectionStyle = {\n    textAlign: (_e = style == null ? void 0 : style.textAlign) != null ? _e : void 0,\n    padding: getPadding(style == null ? void 0 : style.padding)\n  };\n  return /* @__PURE__ */ React.createElement(\"div\", { style: sectionStyle }, /* @__PURE__ */ React.createElement(\n    \"img\",\n    {\n      alt,\n      src: imageUrl,\n      height: size,\n      width: size,\n      style: {\n        outline: \"none\",\n        border: \"none\",\n        textDecoration: \"none\",\n        objectFit: \"cover\",\n        height: size,\n        width: size,\n        maxWidth: \"100%\",\n        display: \"inline-block\",\n        verticalAlign: \"middle\",\n        textAlign: \"center\",\n        borderRadius: getBorderRadius(shape, size)\n      }\n    }\n  ));\n}\nexport {\n  Avatar,\n  AvatarPropsDefaults,\n  AvatarPropsSchema\n};\n"],
  "mappings": ";;;;;;;;;;;AACA,mBAAkB;AAElB,IAAI,iBAAiB,EAAE,OAAO;AAAA,EAC5B,KAAK,EAAE,OAAO;AAAA,EACd,QAAQ,EAAE,OAAO;AAAA,EACjB,OAAO,EAAE,OAAO;AAAA,EAChB,MAAM,EAAE,OAAO;AACjB,CAAC,EAAE,SAAS,EAAE,SAAS;AACvB,IAAI,aAAa,CAAC,YAAY,UAAU,GAAG,QAAQ,GAAG,MAAM,QAAQ,KAAK,MAAM,QAAQ,MAAM,MAAM,QAAQ,IAAI,OAAO;AACtH,IAAI,oBAAoB,EAAE,OAAO;AAAA,EAC/B,OAAO,EAAE,OAAO;AAAA,IACd,WAAW,EAAE,KAAK,CAAC,QAAQ,UAAU,OAAO,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,IACnE,SAAS;AAAA,EACX,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EACvB,OAAO,EAAE,OAAO;AAAA,IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,IAC3C,OAAO,EAAE,KAAK,CAAC,UAAU,UAAU,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,IACnE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS;AAAA,IACzC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS;AAAA,EACtC,CAAC,EAAE,SAAS,EAAE,SAAS;AACzB,CAAC;AACD,SAAS,gBAAgB,OAAO,MAAM;AACpC,UAAQ,OAAO;AAAA,IACb,KAAK;AACH,aAAO,OAAO;AAAA,IAChB,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AAAA,IACL;AACE,aAAO;AAAA,EACX;AACF;AACA,IAAI,sBAAsB;AAAA,EACxB,MAAM;AAAA,EACN,UAAU;AAAA,EACV,KAAK;AAAA,EACL,OAAO;AACT;AACA,SAAS,OAAO,EAAE,OAAO,MAAM,GAAG;AAChC,MAAI,IAAI,IAAI,IAAI,IAAI;AACpB,QAAM,QAAQ,KAAK,SAAS,OAAO,SAAS,MAAM,SAAS,OAAO,KAAK,oBAAoB;AAC3F,QAAM,YAAY,KAAK,SAAS,OAAO,SAAS,MAAM,aAAa,OAAO,KAAK,oBAAoB;AACnG,QAAM,OAAO,KAAK,SAAS,OAAO,SAAS,MAAM,QAAQ,OAAO,KAAK,oBAAoB;AACzF,QAAM,SAAS,KAAK,SAAS,OAAO,SAAS,MAAM,UAAU,OAAO,KAAK,oBAAoB;AAC7F,QAAM,eAAe;AAAA,IACnB,YAAY,KAAK,SAAS,OAAO,SAAS,MAAM,cAAc,OAAO,KAAK;AAAA,IAC1E,SAAS,WAAW,SAAS,OAAO,SAAS,MAAM,OAAO;AAAA,EAC5D;AACA,SAAuB,aAAAA,QAAM,cAAc,OAAO,EAAE,OAAO,aAAa,GAAmB,aAAAA,QAAM;AAAA,IAC/F;AAAA,IACA;AAAA,MACE;AAAA,MACA,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,QACL,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,gBAAgB;AAAA,QAChB,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,UAAU;AAAA,QACV,SAAS;AAAA,QACT,eAAe;AAAA,QACf,WAAW;AAAA,QACX,cAAc,gBAAgB,OAAO,IAAI;AAAA,MAC3C;AAAA,IACF;AAAA,EACF,CAAC;AACH;",
  "names": ["React"]
}
